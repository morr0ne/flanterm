/* automatically generated by rust-bindgen 0.71.1 */

pub const FLANTERM_FB_H: u32 = 1;
pub const _STDINT_H: u32 = 1;
pub const _FEATURES_H: u32 = 1;
pub const _DEFAULT_SOURCE: u32 = 1;
pub const __GLIBC_USE_ISOC2Y: u32 = 0;
pub const __GLIBC_USE_ISOC23: u32 = 0;
pub const __USE_ISOC11: u32 = 1;
pub const __USE_ISOC99: u32 = 1;
pub const __USE_ISOC95: u32 = 1;
pub const __USE_POSIX_IMPLICITLY: u32 = 1;
pub const _POSIX_SOURCE: u32 = 1;
pub const _POSIX_C_SOURCE: u32 = 200809;
pub const __USE_POSIX: u32 = 1;
pub const __USE_POSIX2: u32 = 1;
pub const __USE_POSIX199309: u32 = 1;
pub const __USE_POSIX199506: u32 = 1;
pub const __USE_XOPEN2K: u32 = 1;
pub const __USE_XOPEN2K8: u32 = 1;
pub const _ATFILE_SOURCE: u32 = 1;
pub const __WORDSIZE: u32 = 64;
pub const __WORDSIZE_TIME64_COMPAT32: u32 = 1;
pub const __SYSCALL_WORDSIZE: u32 = 64;
pub const __TIMESIZE: u32 = 64;
pub const __USE_TIME_BITS64: u32 = 1;
pub const __USE_MISC: u32 = 1;
pub const __USE_ATFILE: u32 = 1;
pub const __USE_FORTIFY_LEVEL: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_GETS: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_SCANF: u32 = 0;
pub const __GLIBC_USE_C23_STRTOL: u32 = 0;
pub const _STDC_PREDEF_H: u32 = 1;
pub const __STDC_IEC_559__: u32 = 1;
pub const __STDC_IEC_60559_BFP__: u32 = 201404;
pub const __STDC_IEC_559_COMPLEX__: u32 = 1;
pub const __STDC_IEC_60559_COMPLEX__: u32 = 201404;
pub const __STDC_ISO_10646__: u32 = 201706;
pub const __GNU_LIBRARY__: u32 = 6;
pub const __GLIBC__: u32 = 2;
pub const __GLIBC_MINOR__: u32 = 41;
pub const _SYS_CDEFS_H: u32 = 1;
pub const __glibc_c99_flexarr_available: u32 = 1;
pub const __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI: u32 = 0;
pub const __HAVE_GENERIC_SELECTION: u32 = 1;
pub const __GLIBC_USE_LIB_EXT2: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT_C23: u32 = 0;
pub const __GLIBC_USE_IEC_60559_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT_C23: u32 = 0;
pub const __GLIBC_USE_IEC_60559_TYPES_EXT: u32 = 0;
pub const _BITS_TYPES_H: u32 = 1;
pub const _BITS_TYPESIZES_H: u32 = 1;
pub const __OFF_T_MATCHES_OFF64_T: u32 = 1;
pub const __INO_T_MATCHES_INO64_T: u32 = 1;
pub const __RLIM_T_MATCHES_RLIM64_T: u32 = 1;
pub const __STATFS_MATCHES_STATFS64: u32 = 1;
pub const __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64: u32 = 1;
pub const __FD_SETSIZE: u32 = 1024;
pub const _BITS_TIME64_H: u32 = 1;
pub const _BITS_WCHAR_H: u32 = 1;
pub const _BITS_STDINT_INTN_H: u32 = 1;
pub const _BITS_STDINT_UINTN_H: u32 = 1;
pub const _BITS_STDINT_LEAST_H: u32 = 1;
pub const INT8_MIN: i32 = -128;
pub const INT16_MIN: i32 = -32768;
pub const INT32_MIN: i32 = -2147483648;
pub const INT8_MAX: u32 = 127;
pub const INT16_MAX: u32 = 32767;
pub const INT32_MAX: u32 = 2147483647;
pub const UINT8_MAX: u32 = 255;
pub const UINT16_MAX: u32 = 65535;
pub const UINT32_MAX: u32 = 4294967295;
pub const INT_LEAST8_MIN: i32 = -128;
pub const INT_LEAST16_MIN: i32 = -32768;
pub const INT_LEAST32_MIN: i32 = -2147483648;
pub const INT_LEAST8_MAX: u32 = 127;
pub const INT_LEAST16_MAX: u32 = 32767;
pub const INT_LEAST32_MAX: u32 = 2147483647;
pub const UINT_LEAST8_MAX: u32 = 255;
pub const UINT_LEAST16_MAX: u32 = 65535;
pub const UINT_LEAST32_MAX: u32 = 4294967295;
pub const INT_FAST8_MIN: i32 = -128;
pub const INT_FAST16_MIN: i64 = -9223372036854775808;
pub const INT_FAST32_MIN: i64 = -9223372036854775808;
pub const INT_FAST8_MAX: u32 = 127;
pub const INT_FAST16_MAX: u64 = 9223372036854775807;
pub const INT_FAST32_MAX: u64 = 9223372036854775807;
pub const UINT_FAST8_MAX: u32 = 255;
pub const UINT_FAST16_MAX: i32 = -1;
pub const UINT_FAST32_MAX: i32 = -1;
pub const INTPTR_MIN: i64 = -9223372036854775808;
pub const INTPTR_MAX: u64 = 9223372036854775807;
pub const UINTPTR_MAX: i32 = -1;
pub const PTRDIFF_MIN: i64 = -9223372036854775808;
pub const PTRDIFF_MAX: u64 = 9223372036854775807;
pub const SIG_ATOMIC_MIN: i32 = -2147483648;
pub const SIG_ATOMIC_MAX: u32 = 2147483647;
pub const SIZE_MAX: i32 = -1;
pub const WINT_MIN: u32 = 0;
pub const WINT_MAX: u32 = 4294967295;
pub const __bool_true_false_are_defined: u32 = 1;
pub const true_: u32 = 1;
pub const false_: u32 = 0;
pub const FLANTERM_H: u32 = 1;
pub const FLANTERM_MAX_ESC_VALUES: u32 = 16;
pub const FLANTERM_CB_DEC: u32 = 10;
pub const FLANTERM_CB_BELL: u32 = 20;
pub const FLANTERM_CB_PRIVATE_ID: u32 = 30;
pub const FLANTERM_CB_STATUS_REPORT: u32 = 40;
pub const FLANTERM_CB_POS_REPORT: u32 = 50;
pub const FLANTERM_CB_KBD_LEDS: u32 = 60;
pub const FLANTERM_CB_MODE: u32 = 70;
pub const FLANTERM_CB_LINUX: u32 = 80;
pub const FLANTERM_OOB_OUTPUT_OCRNL: u32 = 1;
pub const FLANTERM_OOB_OUTPUT_OFDEL: u32 = 2;
pub const FLANTERM_OOB_OUTPUT_OFILL: u32 = 4;
pub const FLANTERM_OOB_OUTPUT_OLCUC: u32 = 8;
pub const FLANTERM_OOB_OUTPUT_ONLCR: u32 = 16;
pub const FLANTERM_OOB_OUTPUT_ONLRET: u32 = 32;
pub const FLANTERM_OOB_OUTPUT_ONOCR: u32 = 64;
pub const FLANTERM_OOB_OUTPUT_OPOST: u32 = 128;
pub const FLANTERM_FB_FONT_GLYPHS: u32 = 256;
pub type __u_char = ::core::ffi::c_uchar;
pub type __u_short = ::core::ffi::c_ushort;
pub type __u_int = ::core::ffi::c_uint;
pub type __u_long = ::core::ffi::c_ulong;
pub type __int8_t = ::core::ffi::c_schar;
pub type __uint8_t = ::core::ffi::c_uchar;
pub type __int16_t = ::core::ffi::c_short;
pub type __uint16_t = ::core::ffi::c_ushort;
pub type __int32_t = ::core::ffi::c_int;
pub type __uint32_t = ::core::ffi::c_uint;
pub type __int64_t = ::core::ffi::c_long;
pub type __uint64_t = ::core::ffi::c_ulong;
pub type __int_least8_t = __int8_t;
pub type __uint_least8_t = __uint8_t;
pub type __int_least16_t = __int16_t;
pub type __uint_least16_t = __uint16_t;
pub type __int_least32_t = __int32_t;
pub type __uint_least32_t = __uint32_t;
pub type __int_least64_t = __int64_t;
pub type __uint_least64_t = __uint64_t;
pub type __quad_t = ::core::ffi::c_long;
pub type __u_quad_t = ::core::ffi::c_ulong;
pub type __intmax_t = ::core::ffi::c_long;
pub type __uintmax_t = ::core::ffi::c_ulong;
pub type __dev_t = ::core::ffi::c_ulong;
pub type __uid_t = ::core::ffi::c_uint;
pub type __gid_t = ::core::ffi::c_uint;
pub type __ino_t = ::core::ffi::c_ulong;
pub type __ino64_t = ::core::ffi::c_ulong;
pub type __mode_t = ::core::ffi::c_uint;
pub type __nlink_t = ::core::ffi::c_ulong;
pub type __off_t = ::core::ffi::c_long;
pub type __off64_t = ::core::ffi::c_long;
pub type __pid_t = ::core::ffi::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __fsid_t {
    pub __val: [::core::ffi::c_int; 2usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __fsid_t"][::core::mem::size_of::<__fsid_t>() - 8usize];
    ["Alignment of __fsid_t"][::core::mem::align_of::<__fsid_t>() - 4usize];
    ["Offset of field: __fsid_t::__val"][::core::mem::offset_of!(__fsid_t, __val) - 0usize];
};
pub type __clock_t = ::core::ffi::c_long;
pub type __rlim_t = ::core::ffi::c_ulong;
pub type __rlim64_t = ::core::ffi::c_ulong;
pub type __id_t = ::core::ffi::c_uint;
pub type __time_t = ::core::ffi::c_long;
pub type __useconds_t = ::core::ffi::c_uint;
pub type __suseconds_t = ::core::ffi::c_long;
pub type __suseconds64_t = ::core::ffi::c_long;
pub type __daddr_t = ::core::ffi::c_int;
pub type __key_t = ::core::ffi::c_int;
pub type __clockid_t = ::core::ffi::c_int;
pub type __timer_t = *mut ::core::ffi::c_void;
pub type __blksize_t = ::core::ffi::c_long;
pub type __blkcnt_t = ::core::ffi::c_long;
pub type __blkcnt64_t = ::core::ffi::c_long;
pub type __fsblkcnt_t = ::core::ffi::c_ulong;
pub type __fsblkcnt64_t = ::core::ffi::c_ulong;
pub type __fsfilcnt_t = ::core::ffi::c_ulong;
pub type __fsfilcnt64_t = ::core::ffi::c_ulong;
pub type __fsword_t = ::core::ffi::c_long;
pub type __ssize_t = ::core::ffi::c_long;
pub type __syscall_slong_t = ::core::ffi::c_long;
pub type __syscall_ulong_t = ::core::ffi::c_ulong;
pub type __loff_t = __off64_t;
pub type __caddr_t = *mut ::core::ffi::c_char;
pub type __intptr_t = ::core::ffi::c_long;
pub type __socklen_t = ::core::ffi::c_uint;
pub type __sig_atomic_t = ::core::ffi::c_int;
pub type int_least8_t = __int_least8_t;
pub type int_least16_t = __int_least16_t;
pub type int_least32_t = __int_least32_t;
pub type int_least64_t = __int_least64_t;
pub type uint_least8_t = __uint_least8_t;
pub type uint_least16_t = __uint_least16_t;
pub type uint_least32_t = __uint_least32_t;
pub type uint_least64_t = __uint_least64_t;
pub type int_fast8_t = ::core::ffi::c_schar;
pub type int_fast16_t = ::core::ffi::c_long;
pub type int_fast32_t = ::core::ffi::c_long;
pub type int_fast64_t = ::core::ffi::c_long;
pub type uint_fast8_t = ::core::ffi::c_uchar;
pub type uint_fast16_t = ::core::ffi::c_ulong;
pub type uint_fast32_t = ::core::ffi::c_ulong;
pub type uint_fast64_t = ::core::ffi::c_ulong;
pub type intmax_t = __intmax_t;
pub type uintmax_t = __uintmax_t;
pub type wchar_t = ::core::ffi::c_int;
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct max_align_t {
    pub __clang_max_align_nonce1: ::core::ffi::c_longlong,
    pub __bindgen_padding_0: u64,
    pub __clang_max_align_nonce2: u128,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of max_align_t"][::core::mem::size_of::<max_align_t>() - 32usize];
    ["Alignment of max_align_t"][::core::mem::align_of::<max_align_t>() - 16usize];
    ["Offset of field: max_align_t::__clang_max_align_nonce1"]
        [::core::mem::offset_of!(max_align_t, __clang_max_align_nonce1) - 0usize];
    ["Offset of field: max_align_t::__clang_max_align_nonce2"]
        [::core::mem::offset_of!(max_align_t, __clang_max_align_nonce2) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct flanterm_context {
    pub tab_size: usize,
    pub autoflush: bool,
    pub cursor_enabled: bool,
    pub scroll_enabled: bool,
    pub control_sequence: bool,
    pub escape: bool,
    pub osc: bool,
    pub osc_escape: bool,
    pub rrr: bool,
    pub discard_next: bool,
    pub bold: bool,
    pub bg_bold: bool,
    pub reverse_video: bool,
    pub dec_private: bool,
    pub insert_mode: bool,
    pub code_point: u64,
    pub unicode_remaining: usize,
    pub g_select: u8,
    pub charsets: [u8; 2usize],
    pub current_charset: usize,
    pub escape_offset: usize,
    pub esc_values_i: usize,
    pub saved_cursor_x: usize,
    pub saved_cursor_y: usize,
    pub current_primary: usize,
    pub current_bg: usize,
    pub scroll_top_margin: usize,
    pub scroll_bottom_margin: usize,
    pub esc_values: [u32; 16usize],
    pub oob_output: u64,
    pub saved_state_bold: bool,
    pub saved_state_bg_bold: bool,
    pub saved_state_reverse_video: bool,
    pub saved_state_current_charset: usize,
    pub saved_state_current_primary: usize,
    pub saved_state_current_bg: usize,
    pub rows: usize,
    pub cols: usize,
    pub raw_putchar:
        ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context, c: u8)>,
    pub clear:
        ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context, move_: bool)>,
    pub set_cursor_pos: ::core::option::Option<
        unsafe extern "C" fn(arg1: *mut flanterm_context, x: usize, y: usize),
    >,
    pub get_cursor_pos: ::core::option::Option<
        unsafe extern "C" fn(arg1: *mut flanterm_context, x: *mut usize, y: *mut usize),
    >,
    pub set_text_fg:
        ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context, fg: usize)>,
    pub set_text_bg:
        ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context, bg: usize)>,
    pub set_text_fg_bright:
        ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context, fg: usize)>,
    pub set_text_bg_bright:
        ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context, bg: usize)>,
    pub set_text_fg_rgb:
        ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context, fg: u32)>,
    pub set_text_bg_rgb:
        ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context, bg: u32)>,
    pub set_text_fg_default:
        ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context)>,
    pub set_text_bg_default:
        ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context)>,
    pub set_text_fg_default_bright:
        ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context)>,
    pub set_text_bg_default_bright:
        ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context)>,
    pub move_character: ::core::option::Option<
        unsafe extern "C" fn(
            arg1: *mut flanterm_context,
            new_x: usize,
            new_y: usize,
            old_x: usize,
            old_y: usize,
        ),
    >,
    pub scroll: ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context)>,
    pub revscroll: ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context)>,
    pub swap_palette: ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context)>,
    pub save_state: ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context)>,
    pub restore_state: ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context)>,
    pub double_buffer_flush:
        ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context)>,
    pub full_refresh: ::core::option::Option<unsafe extern "C" fn(arg1: *mut flanterm_context)>,
    pub deinit: ::core::option::Option<
        unsafe extern "C" fn(
            arg1: *mut flanterm_context,
            arg2: ::core::option::Option<
                unsafe extern "C" fn(arg1: *mut ::core::ffi::c_void, arg2: usize),
            >,
        ),
    >,
    pub callback: ::core::option::Option<
        unsafe extern "C" fn(
            arg1: *mut flanterm_context,
            arg2: u64,
            arg3: u64,
            arg4: u64,
            arg5: u64,
        ),
    >,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of flanterm_context"][::core::mem::size_of::<flanterm_context>() - 432usize];
    ["Alignment of flanterm_context"][::core::mem::align_of::<flanterm_context>() - 8usize];
    ["Offset of field: flanterm_context::tab_size"]
        [::core::mem::offset_of!(flanterm_context, tab_size) - 0usize];
    ["Offset of field: flanterm_context::autoflush"]
        [::core::mem::offset_of!(flanterm_context, autoflush) - 8usize];
    ["Offset of field: flanterm_context::cursor_enabled"]
        [::core::mem::offset_of!(flanterm_context, cursor_enabled) - 9usize];
    ["Offset of field: flanterm_context::scroll_enabled"]
        [::core::mem::offset_of!(flanterm_context, scroll_enabled) - 10usize];
    ["Offset of field: flanterm_context::control_sequence"]
        [::core::mem::offset_of!(flanterm_context, control_sequence) - 11usize];
    ["Offset of field: flanterm_context::escape"]
        [::core::mem::offset_of!(flanterm_context, escape) - 12usize];
    ["Offset of field: flanterm_context::osc"]
        [::core::mem::offset_of!(flanterm_context, osc) - 13usize];
    ["Offset of field: flanterm_context::osc_escape"]
        [::core::mem::offset_of!(flanterm_context, osc_escape) - 14usize];
    ["Offset of field: flanterm_context::rrr"]
        [::core::mem::offset_of!(flanterm_context, rrr) - 15usize];
    ["Offset of field: flanterm_context::discard_next"]
        [::core::mem::offset_of!(flanterm_context, discard_next) - 16usize];
    ["Offset of field: flanterm_context::bold"]
        [::core::mem::offset_of!(flanterm_context, bold) - 17usize];
    ["Offset of field: flanterm_context::bg_bold"]
        [::core::mem::offset_of!(flanterm_context, bg_bold) - 18usize];
    ["Offset of field: flanterm_context::reverse_video"]
        [::core::mem::offset_of!(flanterm_context, reverse_video) - 19usize];
    ["Offset of field: flanterm_context::dec_private"]
        [::core::mem::offset_of!(flanterm_context, dec_private) - 20usize];
    ["Offset of field: flanterm_context::insert_mode"]
        [::core::mem::offset_of!(flanterm_context, insert_mode) - 21usize];
    ["Offset of field: flanterm_context::code_point"]
        [::core::mem::offset_of!(flanterm_context, code_point) - 24usize];
    ["Offset of field: flanterm_context::unicode_remaining"]
        [::core::mem::offset_of!(flanterm_context, unicode_remaining) - 32usize];
    ["Offset of field: flanterm_context::g_select"]
        [::core::mem::offset_of!(flanterm_context, g_select) - 40usize];
    ["Offset of field: flanterm_context::charsets"]
        [::core::mem::offset_of!(flanterm_context, charsets) - 41usize];
    ["Offset of field: flanterm_context::current_charset"]
        [::core::mem::offset_of!(flanterm_context, current_charset) - 48usize];
    ["Offset of field: flanterm_context::escape_offset"]
        [::core::mem::offset_of!(flanterm_context, escape_offset) - 56usize];
    ["Offset of field: flanterm_context::esc_values_i"]
        [::core::mem::offset_of!(flanterm_context, esc_values_i) - 64usize];
    ["Offset of field: flanterm_context::saved_cursor_x"]
        [::core::mem::offset_of!(flanterm_context, saved_cursor_x) - 72usize];
    ["Offset of field: flanterm_context::saved_cursor_y"]
        [::core::mem::offset_of!(flanterm_context, saved_cursor_y) - 80usize];
    ["Offset of field: flanterm_context::current_primary"]
        [::core::mem::offset_of!(flanterm_context, current_primary) - 88usize];
    ["Offset of field: flanterm_context::current_bg"]
        [::core::mem::offset_of!(flanterm_context, current_bg) - 96usize];
    ["Offset of field: flanterm_context::scroll_top_margin"]
        [::core::mem::offset_of!(flanterm_context, scroll_top_margin) - 104usize];
    ["Offset of field: flanterm_context::scroll_bottom_margin"]
        [::core::mem::offset_of!(flanterm_context, scroll_bottom_margin) - 112usize];
    ["Offset of field: flanterm_context::esc_values"]
        [::core::mem::offset_of!(flanterm_context, esc_values) - 120usize];
    ["Offset of field: flanterm_context::oob_output"]
        [::core::mem::offset_of!(flanterm_context, oob_output) - 184usize];
    ["Offset of field: flanterm_context::saved_state_bold"]
        [::core::mem::offset_of!(flanterm_context, saved_state_bold) - 192usize];
    ["Offset of field: flanterm_context::saved_state_bg_bold"]
        [::core::mem::offset_of!(flanterm_context, saved_state_bg_bold) - 193usize];
    ["Offset of field: flanterm_context::saved_state_reverse_video"]
        [::core::mem::offset_of!(flanterm_context, saved_state_reverse_video) - 194usize];
    ["Offset of field: flanterm_context::saved_state_current_charset"]
        [::core::mem::offset_of!(flanterm_context, saved_state_current_charset) - 200usize];
    ["Offset of field: flanterm_context::saved_state_current_primary"]
        [::core::mem::offset_of!(flanterm_context, saved_state_current_primary) - 208usize];
    ["Offset of field: flanterm_context::saved_state_current_bg"]
        [::core::mem::offset_of!(flanterm_context, saved_state_current_bg) - 216usize];
    ["Offset of field: flanterm_context::rows"]
        [::core::mem::offset_of!(flanterm_context, rows) - 224usize];
    ["Offset of field: flanterm_context::cols"]
        [::core::mem::offset_of!(flanterm_context, cols) - 232usize];
    ["Offset of field: flanterm_context::raw_putchar"]
        [::core::mem::offset_of!(flanterm_context, raw_putchar) - 240usize];
    ["Offset of field: flanterm_context::clear"]
        [::core::mem::offset_of!(flanterm_context, clear) - 248usize];
    ["Offset of field: flanterm_context::set_cursor_pos"]
        [::core::mem::offset_of!(flanterm_context, set_cursor_pos) - 256usize];
    ["Offset of field: flanterm_context::get_cursor_pos"]
        [::core::mem::offset_of!(flanterm_context, get_cursor_pos) - 264usize];
    ["Offset of field: flanterm_context::set_text_fg"]
        [::core::mem::offset_of!(flanterm_context, set_text_fg) - 272usize];
    ["Offset of field: flanterm_context::set_text_bg"]
        [::core::mem::offset_of!(flanterm_context, set_text_bg) - 280usize];
    ["Offset of field: flanterm_context::set_text_fg_bright"]
        [::core::mem::offset_of!(flanterm_context, set_text_fg_bright) - 288usize];
    ["Offset of field: flanterm_context::set_text_bg_bright"]
        [::core::mem::offset_of!(flanterm_context, set_text_bg_bright) - 296usize];
    ["Offset of field: flanterm_context::set_text_fg_rgb"]
        [::core::mem::offset_of!(flanterm_context, set_text_fg_rgb) - 304usize];
    ["Offset of field: flanterm_context::set_text_bg_rgb"]
        [::core::mem::offset_of!(flanterm_context, set_text_bg_rgb) - 312usize];
    ["Offset of field: flanterm_context::set_text_fg_default"]
        [::core::mem::offset_of!(flanterm_context, set_text_fg_default) - 320usize];
    ["Offset of field: flanterm_context::set_text_bg_default"]
        [::core::mem::offset_of!(flanterm_context, set_text_bg_default) - 328usize];
    ["Offset of field: flanterm_context::set_text_fg_default_bright"]
        [::core::mem::offset_of!(flanterm_context, set_text_fg_default_bright) - 336usize];
    ["Offset of field: flanterm_context::set_text_bg_default_bright"]
        [::core::mem::offset_of!(flanterm_context, set_text_bg_default_bright) - 344usize];
    ["Offset of field: flanterm_context::move_character"]
        [::core::mem::offset_of!(flanterm_context, move_character) - 352usize];
    ["Offset of field: flanterm_context::scroll"]
        [::core::mem::offset_of!(flanterm_context, scroll) - 360usize];
    ["Offset of field: flanterm_context::revscroll"]
        [::core::mem::offset_of!(flanterm_context, revscroll) - 368usize];
    ["Offset of field: flanterm_context::swap_palette"]
        [::core::mem::offset_of!(flanterm_context, swap_palette) - 376usize];
    ["Offset of field: flanterm_context::save_state"]
        [::core::mem::offset_of!(flanterm_context, save_state) - 384usize];
    ["Offset of field: flanterm_context::restore_state"]
        [::core::mem::offset_of!(flanterm_context, restore_state) - 392usize];
    ["Offset of field: flanterm_context::double_buffer_flush"]
        [::core::mem::offset_of!(flanterm_context, double_buffer_flush) - 400usize];
    ["Offset of field: flanterm_context::full_refresh"]
        [::core::mem::offset_of!(flanterm_context, full_refresh) - 408usize];
    ["Offset of field: flanterm_context::deinit"]
        [::core::mem::offset_of!(flanterm_context, deinit) - 416usize];
    ["Offset of field: flanterm_context::callback"]
        [::core::mem::offset_of!(flanterm_context, callback) - 424usize];
};
unsafe extern "C" {
    pub fn flanterm_context_reinit(ctx: *mut flanterm_context);
}
unsafe extern "C" {
    pub fn flanterm_write(
        ctx: *mut flanterm_context,
        buf: *const ::core::ffi::c_char,
        count: usize,
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct flanterm_fb_char {
    pub c: u32,
    pub fg: u32,
    pub bg: u32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of flanterm_fb_char"][::core::mem::size_of::<flanterm_fb_char>() - 12usize];
    ["Alignment of flanterm_fb_char"][::core::mem::align_of::<flanterm_fb_char>() - 4usize];
    ["Offset of field: flanterm_fb_char::c"][::core::mem::offset_of!(flanterm_fb_char, c) - 0usize];
    ["Offset of field: flanterm_fb_char::fg"]
        [::core::mem::offset_of!(flanterm_fb_char, fg) - 4usize];
    ["Offset of field: flanterm_fb_char::bg"]
        [::core::mem::offset_of!(flanterm_fb_char, bg) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct flanterm_fb_queue_item {
    pub x: usize,
    pub y: usize,
    pub c: flanterm_fb_char,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of flanterm_fb_queue_item"][::core::mem::size_of::<flanterm_fb_queue_item>() - 32usize];
    ["Alignment of flanterm_fb_queue_item"]
        [::core::mem::align_of::<flanterm_fb_queue_item>() - 8usize];
    ["Offset of field: flanterm_fb_queue_item::x"]
        [::core::mem::offset_of!(flanterm_fb_queue_item, x) - 0usize];
    ["Offset of field: flanterm_fb_queue_item::y"]
        [::core::mem::offset_of!(flanterm_fb_queue_item, y) - 8usize];
    ["Offset of field: flanterm_fb_queue_item::c"]
        [::core::mem::offset_of!(flanterm_fb_queue_item, c) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct flanterm_fb_context {
    pub term: flanterm_context,
    pub plot_char: ::core::option::Option<
        unsafe extern "C" fn(
            ctx: *mut flanterm_context,
            c: *mut flanterm_fb_char,
            x: usize,
            y: usize,
        ),
    >,
    pub font_width: usize,
    pub font_height: usize,
    pub glyph_width: usize,
    pub glyph_height: usize,
    pub font_scale_x: usize,
    pub font_scale_y: usize,
    pub offset_x: usize,
    pub offset_y: usize,
    pub framebuffer: *mut u32,
    pub pitch: usize,
    pub width: usize,
    pub height: usize,
    pub bpp: usize,
    pub red_mask_size: u8,
    pub red_mask_shift: u8,
    pub green_mask_size: u8,
    pub green_mask_shift: u8,
    pub blue_mask_size: u8,
    pub blue_mask_shift: u8,
    pub font_bits_size: usize,
    pub font_bits: *mut u8,
    pub font_bool_size: usize,
    pub font_bool: *mut bool,
    pub ansi_colours: [u32; 8usize],
    pub ansi_bright_colours: [u32; 8usize],
    pub default_fg: u32,
    pub default_bg: u32,
    pub default_fg_bright: u32,
    pub default_bg_bright: u32,
    pub canvas_size: usize,
    pub canvas: *mut u32,
    pub grid_size: usize,
    pub queue_size: usize,
    pub map_size: usize,
    pub grid: *mut flanterm_fb_char,
    pub queue: *mut flanterm_fb_queue_item,
    pub queue_i: usize,
    pub map: *mut *mut flanterm_fb_queue_item,
    pub text_fg: u32,
    pub text_bg: u32,
    pub cursor_x: usize,
    pub cursor_y: usize,
    pub saved_state_text_fg: u32,
    pub saved_state_text_bg: u32,
    pub saved_state_cursor_x: usize,
    pub saved_state_cursor_y: usize,
    pub old_cursor_x: usize,
    pub old_cursor_y: usize,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of flanterm_fb_context"][::core::mem::size_of::<flanterm_fb_context>() - 800usize];
    ["Alignment of flanterm_fb_context"][::core::mem::align_of::<flanterm_fb_context>() - 8usize];
    ["Offset of field: flanterm_fb_context::term"]
        [::core::mem::offset_of!(flanterm_fb_context, term) - 0usize];
    ["Offset of field: flanterm_fb_context::plot_char"]
        [::core::mem::offset_of!(flanterm_fb_context, plot_char) - 432usize];
    ["Offset of field: flanterm_fb_context::font_width"]
        [::core::mem::offset_of!(flanterm_fb_context, font_width) - 440usize];
    ["Offset of field: flanterm_fb_context::font_height"]
        [::core::mem::offset_of!(flanterm_fb_context, font_height) - 448usize];
    ["Offset of field: flanterm_fb_context::glyph_width"]
        [::core::mem::offset_of!(flanterm_fb_context, glyph_width) - 456usize];
    ["Offset of field: flanterm_fb_context::glyph_height"]
        [::core::mem::offset_of!(flanterm_fb_context, glyph_height) - 464usize];
    ["Offset of field: flanterm_fb_context::font_scale_x"]
        [::core::mem::offset_of!(flanterm_fb_context, font_scale_x) - 472usize];
    ["Offset of field: flanterm_fb_context::font_scale_y"]
        [::core::mem::offset_of!(flanterm_fb_context, font_scale_y) - 480usize];
    ["Offset of field: flanterm_fb_context::offset_x"]
        [::core::mem::offset_of!(flanterm_fb_context, offset_x) - 488usize];
    ["Offset of field: flanterm_fb_context::offset_y"]
        [::core::mem::offset_of!(flanterm_fb_context, offset_y) - 496usize];
    ["Offset of field: flanterm_fb_context::framebuffer"]
        [::core::mem::offset_of!(flanterm_fb_context, framebuffer) - 504usize];
    ["Offset of field: flanterm_fb_context::pitch"]
        [::core::mem::offset_of!(flanterm_fb_context, pitch) - 512usize];
    ["Offset of field: flanterm_fb_context::width"]
        [::core::mem::offset_of!(flanterm_fb_context, width) - 520usize];
    ["Offset of field: flanterm_fb_context::height"]
        [::core::mem::offset_of!(flanterm_fb_context, height) - 528usize];
    ["Offset of field: flanterm_fb_context::bpp"]
        [::core::mem::offset_of!(flanterm_fb_context, bpp) - 536usize];
    ["Offset of field: flanterm_fb_context::red_mask_size"]
        [::core::mem::offset_of!(flanterm_fb_context, red_mask_size) - 544usize];
    ["Offset of field: flanterm_fb_context::red_mask_shift"]
        [::core::mem::offset_of!(flanterm_fb_context, red_mask_shift) - 545usize];
    ["Offset of field: flanterm_fb_context::green_mask_size"]
        [::core::mem::offset_of!(flanterm_fb_context, green_mask_size) - 546usize];
    ["Offset of field: flanterm_fb_context::green_mask_shift"]
        [::core::mem::offset_of!(flanterm_fb_context, green_mask_shift) - 547usize];
    ["Offset of field: flanterm_fb_context::blue_mask_size"]
        [::core::mem::offset_of!(flanterm_fb_context, blue_mask_size) - 548usize];
    ["Offset of field: flanterm_fb_context::blue_mask_shift"]
        [::core::mem::offset_of!(flanterm_fb_context, blue_mask_shift) - 549usize];
    ["Offset of field: flanterm_fb_context::font_bits_size"]
        [::core::mem::offset_of!(flanterm_fb_context, font_bits_size) - 552usize];
    ["Offset of field: flanterm_fb_context::font_bits"]
        [::core::mem::offset_of!(flanterm_fb_context, font_bits) - 560usize];
    ["Offset of field: flanterm_fb_context::font_bool_size"]
        [::core::mem::offset_of!(flanterm_fb_context, font_bool_size) - 568usize];
    ["Offset of field: flanterm_fb_context::font_bool"]
        [::core::mem::offset_of!(flanterm_fb_context, font_bool) - 576usize];
    ["Offset of field: flanterm_fb_context::ansi_colours"]
        [::core::mem::offset_of!(flanterm_fb_context, ansi_colours) - 584usize];
    ["Offset of field: flanterm_fb_context::ansi_bright_colours"]
        [::core::mem::offset_of!(flanterm_fb_context, ansi_bright_colours) - 616usize];
    ["Offset of field: flanterm_fb_context::default_fg"]
        [::core::mem::offset_of!(flanterm_fb_context, default_fg) - 648usize];
    ["Offset of field: flanterm_fb_context::default_bg"]
        [::core::mem::offset_of!(flanterm_fb_context, default_bg) - 652usize];
    ["Offset of field: flanterm_fb_context::default_fg_bright"]
        [::core::mem::offset_of!(flanterm_fb_context, default_fg_bright) - 656usize];
    ["Offset of field: flanterm_fb_context::default_bg_bright"]
        [::core::mem::offset_of!(flanterm_fb_context, default_bg_bright) - 660usize];
    ["Offset of field: flanterm_fb_context::canvas_size"]
        [::core::mem::offset_of!(flanterm_fb_context, canvas_size) - 664usize];
    ["Offset of field: flanterm_fb_context::canvas"]
        [::core::mem::offset_of!(flanterm_fb_context, canvas) - 672usize];
    ["Offset of field: flanterm_fb_context::grid_size"]
        [::core::mem::offset_of!(flanterm_fb_context, grid_size) - 680usize];
    ["Offset of field: flanterm_fb_context::queue_size"]
        [::core::mem::offset_of!(flanterm_fb_context, queue_size) - 688usize];
    ["Offset of field: flanterm_fb_context::map_size"]
        [::core::mem::offset_of!(flanterm_fb_context, map_size) - 696usize];
    ["Offset of field: flanterm_fb_context::grid"]
        [::core::mem::offset_of!(flanterm_fb_context, grid) - 704usize];
    ["Offset of field: flanterm_fb_context::queue"]
        [::core::mem::offset_of!(flanterm_fb_context, queue) - 712usize];
    ["Offset of field: flanterm_fb_context::queue_i"]
        [::core::mem::offset_of!(flanterm_fb_context, queue_i) - 720usize];
    ["Offset of field: flanterm_fb_context::map"]
        [::core::mem::offset_of!(flanterm_fb_context, map) - 728usize];
    ["Offset of field: flanterm_fb_context::text_fg"]
        [::core::mem::offset_of!(flanterm_fb_context, text_fg) - 736usize];
    ["Offset of field: flanterm_fb_context::text_bg"]
        [::core::mem::offset_of!(flanterm_fb_context, text_bg) - 740usize];
    ["Offset of field: flanterm_fb_context::cursor_x"]
        [::core::mem::offset_of!(flanterm_fb_context, cursor_x) - 744usize];
    ["Offset of field: flanterm_fb_context::cursor_y"]
        [::core::mem::offset_of!(flanterm_fb_context, cursor_y) - 752usize];
    ["Offset of field: flanterm_fb_context::saved_state_text_fg"]
        [::core::mem::offset_of!(flanterm_fb_context, saved_state_text_fg) - 760usize];
    ["Offset of field: flanterm_fb_context::saved_state_text_bg"]
        [::core::mem::offset_of!(flanterm_fb_context, saved_state_text_bg) - 764usize];
    ["Offset of field: flanterm_fb_context::saved_state_cursor_x"]
        [::core::mem::offset_of!(flanterm_fb_context, saved_state_cursor_x) - 768usize];
    ["Offset of field: flanterm_fb_context::saved_state_cursor_y"]
        [::core::mem::offset_of!(flanterm_fb_context, saved_state_cursor_y) - 776usize];
    ["Offset of field: flanterm_fb_context::old_cursor_x"]
        [::core::mem::offset_of!(flanterm_fb_context, old_cursor_x) - 784usize];
    ["Offset of field: flanterm_fb_context::old_cursor_y"]
        [::core::mem::offset_of!(flanterm_fb_context, old_cursor_y) - 792usize];
};
unsafe extern "C" {
    pub fn flanterm_fb_init(
        _malloc: ::core::option::Option<
            unsafe extern "C" fn(arg1: usize) -> *mut ::core::ffi::c_void,
        >,
        _free: ::core::option::Option<
            unsafe extern "C" fn(arg1: *mut ::core::ffi::c_void, arg2: usize),
        >,
        framebuffer: *mut u32,
        width: usize,
        height: usize,
        pitch: usize,
        red_mask_size: u8,
        red_mask_shift: u8,
        green_mask_size: u8,
        green_mask_shift: u8,
        blue_mask_size: u8,
        blue_mask_shift: u8,
        canvas: *mut u32,
        ansi_colours: *mut u32,
        ansi_bright_colours: *mut u32,
        default_bg: *mut u32,
        default_fg: *mut u32,
        default_bg_bright: *mut u32,
        default_fg_bright: *mut u32,
        font: *mut ::core::ffi::c_void,
        font_width: usize,
        font_height: usize,
        font_spacing: usize,
        font_scale_x: usize,
        font_scale_y: usize,
        margin: usize,
    ) -> *mut flanterm_context;
}
